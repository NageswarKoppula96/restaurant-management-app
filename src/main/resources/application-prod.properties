# Production Database Configuration
# These will be overridden by Heroku's DATABASE_URL environment variable
spring.datasource.url=${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/restaurant}
spring.datasource.username=${JDBC_DATABASE_USERNAME:postgres}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# CORS Configuration for Production
cors.allowed-origins=https://your-production-domain.com
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true
cors.max-age=3600

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Actuator Endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized
management.endpoints.web.base-path=/actuator

# Logging
logging.level.root=INFO
logging.level.com.restaurant=DEBUG
logging.file.name=logs/restaurant-app.log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Performance
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Security (for production, consider adding Spring Security)
# spring.security.user.name=admin
# spring.security.user.password=your_secure_admin_password
# spring.security.user.roles=ADMIN
